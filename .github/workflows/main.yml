name: CI

on: 
  [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Download Ngrok
        run: |
          Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile ngrok.zip
        shell: pwsh

      - name: Extract Ngrok
        run: |
          Expand-Archive -Path ngrok.zip -DestinationPath ngrok
        shell: pwsh

      - name: Authenticate Ngrok
        run: |
          .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        shell: pwsh

      - name: Enable Remote Desktop
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          # Add the user to the Remote Desktop Users group
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "runneradmin"
        shell: pwsh

      - name: Set Runner Admin Password
        run: |
          $password = ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force
          Set-LocalUser  -Name "runneradmin" -Password $password
        shell: pwsh

      - name: Create Ngrok Tunnel
        run: |
          .\ngrok\ngrok.exe tcp 3389 --region in
        shell: pwsh

      - name: Keep Tunnel Alive
        run: |
          while ($true) {
            Start-Sleep -Seconds 60
            Write-Output "Tunnel is still active..."
          }
        shell: pwsh
